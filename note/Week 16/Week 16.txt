Week 16: Component Interaction by Service 

1. Display from child component via Template variable # 

- In Chile Ts: 

name ="Dara";

  showGreeting(){
    console.log("Hello From Child Component")
  }

- In app.component.ts 

<app-child #myChild></app-child>

{{myChild.name}}
{{myChild.showGreeting()}}

- In app.component.html 

<app-child #myChild></app-child>
<button (click)="myChild.showGreeting()">Show Greeting</button>

Note:

- Template reference can : Read Only 

------------------------------------------------------------------
* ប្រើពេលយើងចង់ Set តម្លៃ លើ child property we use Child Decorator 

2. View Child Decorator:  

យើងចង់ Pass តម្លៃពី Parent ដើម្បីធ្វើការ Set​ តម្លៃនឹងវិញ 

2.1 ដំបូងយើងធ្វើការចាប់ child នឹងសិន 

 @ViewChild (ChildComponent) childRef!: ChildComponent;

2.2 បន្ទាប់មកយើងធ្វើការចាប់ Component នៅក្នុង Child នឹង 

ngAfterViewInit(): void {
    this.childRef.name = "Tola";
  }

2.3 : in app.component.ts

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements AfterViewInit{

  @ViewChild (ChildComponent) childRef!: ChildComponent;

  ngAfterViewInit(): void {
    this.childRef.name = "Tola";
  }

}


-----------------------------------------------------------------------------
យើងចង់អោយ Child របស់យើងមានទំនាក់ទំនងទៅ Parent វិញ

3. Output Decorator: 

Gold : we create one component in the Parent then all the child below parent can access to it. 
































































































































































































