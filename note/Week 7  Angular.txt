Week 7 : Angular 

First version is Augular JS 
Then Augular v 2 
Now Augular 

------------ What and why?

- Framework to build client side application
- វាមានតែមួយ Page ទេ ហើយពេលវាចង់ប្តូរគឺប្តូរតែមួយ Page mok neng : Great for signle page app. 
- Modular approach ផ្តាចវាជា ក្រុមបានស្រួលគ្រប់គ្រង់
អោយតែវាជាមួយ Function នឹងយើងផ្តាច់វាជា Modular Ex: in the back it have many function and task to do 
college information, load, borrow …

- Reduse able យើងអាចយក function vir tov tver ey pseng ban 
- Unit Testable 
- build by Google + Microsoft (typescrip)

--------------------------------------
Install Augular :

1. node -v and npm -v  need to have these one 

2. Install command 
>> npm install -g @angular/cli 

-g = globle 
-cli : command line interface 

3. after we install we check the Augular 
>> ng version

-------------------------------------

*** Create applicaton *** 

1. Where we want to create :
>> ng new "name app"

Inside Augular 

- package.json : where we store the dependency and library 
- scr : where we write app code 
- main.ts : is the entry point 

2. run app 

>> ng serve 

-- http://localhost:4200/

Where the page view location : 

\src\app\app.component.html

====================

<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->
<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->
<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->
<!-- * * * * * * * * * * and can be replaced.  * * * * * * * * * * -->
<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->
<!-- * * * * * * * * * Delete the template below * * * * * * * * * -->
<!-- * * * * * * * to get started with your project! * * * * * * * -->
<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->

<style>
  :host {
    --bright-blue: oklch(51.01% 0.274 263.83);
    --electric-violet: oklch(53.18% 0.28 296.97);
    --french-violet: oklch(47.66% 0.246 305.88);
    --vivid-pink: oklch(69.02% 0.277 332.77);
    --hot-red: oklch(61.42% 0.238 15.34);
    --orange-red: oklch(63.32% 0.24 31.68);

    --gray-900: oklch(19.37% 0.006 300.98);
    --gray-700: oklch(36.98% 0.014 302.71);
    --gray-400: oklch(70.9% 0.015 304.04);


===========================


app.components.ts : where we use our TypeScrip 

- components ជាផ្នែកមួយដែល គ្រប់គ្រងទៅលើអ្វីមួយ ដូចជាផ្នែក slide bar, button , button page … 
or one block that display in the webpage 


****
one component have  = 
1 html Templeate : app.componente.html
2 class : control logic : app.componente.ts
3 css: its connect with html : app.componente.css


*** muduls have services(ច្រើន)
, service is a class that control business logic of app module contain component 
and service 

================= Flow working 

1. main.ts ផ្លូវចូល

bootstrapApplication(AppComponent, appConfig) 

កន្លែងនឹង វារត់ទៅកាន់ Mudul or AppComponent 

2. app.components.ts (វាមានផ្ទុក component យើងក្នុងនឹង)
វាជាកន្លែង គ្រប់គ្រប់ Login = class របស់យើង

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [RouterOutlet],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent {
  title = 'hello-world-vibol';
}

==> export class AppComponent

Note:

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [RouterOutlet],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})

they call decorector : 

- templateUrl: './app.component.html', វាប្រើ view page Html 
- styleUrl: './app.component.css'

==> ចឹងកន្លែងនឹងវាជា Component ដែលស្មើរ នឹង​ HTML&CSS + Class (AppComponent)






















































































































































