Week 13. Reactive Form (Model driven)

- code and logic reside in components class 
- No two way binding 
- Well suited for complex scenario 
- Dynamic form Field (Phone: person, home)
- Custom Validationj(pwd and confirm pwd)
- Dynamic Validation (email mandatory if subscribe is selected)
- Unit Test 

-------------------------------------------------------------

Content will show : 
- Add form element 
- create form model 
- manage the form control values
- FormBuilder service 
- Validate: simple, custom, cross-field, dynamic
- Dynamic form data 


=====================  Step By step create Reactive Form =====================

1. In HTML 
Import bootstrap to index.html: 

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

2. app.component.html : crate form 

<div class="container-fluid">
  <h2>Register Form</h2>
  <form action="">
    <div class="form-group">
      <label for="">Name</label>
      <input type="text" class="form-control">
    </div>
    <div class="form-group">
      <label for="">Password</label>
      <input type="password" class="form-control">
    </div>
    <div class="form-group">
      <label for="">Confirm Password</label>
      <input type="password" class="form-control">
    </div>

  </form>

</div>

3. in the app.module.ts : (ReactiveFormsModule)

Import FormGroup : 

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import {ReactiveFormsModule} from '@angular/forms';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    ReactiveFormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }


4. Create FormControl by ouerseve in the app.component.ts 

import { FormControl, FormGroup } from '@angular/forms';

  registrationForm = new FormGroup({

    username : new FormControl,
    pwd : new FormControl,
    confirmPwd : new FormControl
  });


5. Binding from Ts to HTML (how to show from TS to View) 

<form [formGroup]="registrationForm"> = យើងប្រើ formGroup binding to TS 
 
--------------------------------

in html :

{{registrationForm.value| json}}

==> 

View in template :

{ "username": null, "pwd": null, "confirmPwd": null }

Note: Log vir merl 


How to find property in the FromGroup we binding: 

test(){
    this.registrationForm.value;
  }

so we can check property in the registrationForm

==================================================================== 

Short Form to create FormControl :

1. in app.component.ts

- inject the FormBuilder 

constructor(private fb: FormBuilder){}

- how to create :

registrationForm = this.fb.group({
    username : [],
    pwe : [],
    confirmPwd : [],
    address : this.fb.group({

      province : [],
      district : [],
      commune  : []

    })
  });

noted: username : new FormControl, ==> username : [],


---------------------------------------------------------------------------

















































































































